/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.kotlin = "1.3.50"
versions.android_gradle_plugin = '3.5.0'

versions.multidex = '1.0.3'
versions.google_services = '4.2.0'
//Firebase
versions.ui_auth = '5.0.0'
versions.admin = '6.8.1'
versions.firestore = '20.1.0'
versions.storage = '18.1.1'
versions.storage_ui = '3.3.0'
//MISC
versions.facebook_sdk = '5.0.0'
versions.login_buttons = '1.0.0'
versions.anko_common = "0.8.3"
versions.materialdrawer = "7.0.0-rc01"
versions.anko_version = '0.10.8'
versions.drawer_layout = '1.0.0'
versions.album = '2.1.3'
versions.percent = '1.0.0'
versions.chatkit = '0.3.3'
versions.picasso = '2.71828'
versions.interceptor = '3.12.1'
versions.timber = '4.7.1'
versions.okhttp3 = '1.1.0'
versions.image_cropper = '2.8.+'
versions.coroutines = '1.3.0-RC'
versions.coroutines_play_services = '1.1.1'
versions.arrow_version = "0.9.0"
versions.apache_commons = "2.5"
versions.rounded_image_view = '2.3.0'
versions.data_binding = '3.1.4'
versions.glide_transformation = '4.1.0'

versions.arch_core = "2.0.1"
versions.atsl_rules = "1.1.1"
versions.atsl_runner = "1.1.2"
versions.atsl_junit = "1.1.0"
versions.benchmark = "1.0.0-alpha02"
versions.constraint_layout = "1.1.3"
versions.core_ktx = "1.0.0"
versions.dagger = "2.22"
versions.dexmaker = "2.2.0"
versions.espresso = "3.2.0"
versions.fragment = "1.1.0-alpha09"
versions.glide = "4.9.0"
versions.hamcrest = "1.3"
versions.junit = "4.12"
versions.lifecycle = "2.2.0-alpha03"
versions.mockito = "2.25.0"
versions.mockito_all = "1.10.19"
versions.mockito_android = "2.25.0"
versions.mockwebserver = "3.8.1"
versions.navigation = "2.2.0-beta01"
versions.okhttp_logging_interceptor = "3.9.0"
versions.paging = "2.1.0-rc01"
versions.retrofit = "2.3.0"
versions.robolectric = "4.2"
versions.room = "2.1.0-alpha06"
versions.rx_android = "2.0.1"
versions.rxjava2 = "2.1.3"
versions.support = "1.0.2"
versions.timber = "4.5.1"
versions.work = "2.1.0-alpha01"
ext.versions = versions

def firebase = [:]
firebase.ui_auth = "com.firebaseui:firebase-ui-auth:$versions.ui_auth"
firebase.firestore = "com.google.firebase:firebase-firestore:$versions.firestore"
firebase.admin = "com.google.firebase:firebase-admin:$versions.admin"
firebase.storage = "com.google.firebase:firebase-storage:$versions.storage"
firebase.storage_ui = "com.firebaseui:firebase-ui-storage:$versions.storage_ui"
deps.firebase = firebase

def misc = [:]
misc.google_services = "com.google.gms:google-services:$versions.google_services"
misc.multidex = "com.android.support:multidex:$versions.multidex"
misc.facebook_sdk = "com.facebook.android:facebook-android-sdk:$versions.facebook_sdk"
misc.login_buttons = "com.shaishavgandhi:login-buttons:$versions.login_buttons"
misc.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
misc.junit = "junit:junit:$versions.junit"
misc.materialdrawer = "com.mikepenz:materialdrawer:$versions.materialdrawer"
misc.album = "com.yanzhenjie:album:$versions.album"
misc.chatkit = "com.github.stfalcon:chatkit:$versions.chatkit"
misc.picasso = "com.squareup.picasso:picasso:$versions.picasso"
misc.interceptor = "com.squareup.okhttp3:logging-interceptor:$versions.interceptor"
misc.timber = "com.jakewharton.timber:timber:$versions.timber"
misc.okhttp3 = "com.jakewharton.picasso:picasso2-okhttp3-downloader:$versions.okhttp3"
misc.image_cropper = "com.theartofdev.edmodo:android-image-cropper:$versions.image_cropper"
misc.rounded_image_view = "com.makeramen:roundedimageview:$versions.rounded_image_view"
misc.data_binding = "com.android.databinding:compiler:$versions.databinding"
misc.glide_transformation = "jp.wasabeef:glide-transformations:$versions.glide_transformation"

deps.misc = misc

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.stdlib8 = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.anko_common = "org.jetbrains.anko:anko-common:$versions.anko_common"
kotlin.anko_all = "org.jetbrains.anko:anko:$versions.anko_version"
kotlin.anko_constraint = "org.jetbrains.anko:anko-constraint-layout:$versions.anko_version"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
kotlin.coroutines_play_services = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.coroutines_play_services"
deps.kotlin = kotlin

def arrow = [:]
arrow.data = "io.arrow-kt:arrow-core-data:$versions.arrow_version"
arrow.extensions = "io.arrow-kt:arrow-core-extensions:$versions.arrow_version"
arrow.syntax = "io.arrow-kt:arrow-syntax:$versions.arrow_version"
arrow.typeclasses = "io.arrow-kt:arrow-typeclasses:$versions.arrow_version"
arrow.extras_data = "io.arrow-kt:arrow-extras-data:$versions.arrow_version"
arrow.extras_extensions = "io.arrow-kt:arrow-extras-extensions:$versions.arrow_version"
arrow.meta = "io.arrow-kt:arrow-meta:$versions.arrow_version"
deps.arrow = arrow

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.core_ktx = "androidx.core:core-ktx:$versions.core_ktx"
support.fragment_runtime = "androidx.fragment:fragment:$versions.fragment"
support.fragment_runtime_ktx = "androidx.fragment:fragment-ktx:$versions.fragment"
support.fragment_testing = "androidx.fragment:fragment-testing:$versions.fragment"
support.drawer_layout = "androidx.drawerlayout:drawerlayout:$versions.drawer_layout"
support.percent = "androidx.percentlayout:percentlayout:$versions.percent"
deps.support = support

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.viewmodel_ktx = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata:$versions.lifecycle"
deps.lifecycle = lifecycle

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def espresso = [:]
espresso.core = "androidx.test.espresso:espresso-core:$versions.espresso"
espresso.contrib = "androidx.test.espresso:espresso-contrib:$versions.espresso"
espresso.intents = "androidx.test.espresso:espresso-intents:$versions.espresso"
deps.espresso = espresso

def atsl = [:]
atsl.ext_junit = "androidx.test.ext:junit:$versions.atsl_junit"
atsl.runner = "androidx.test:runner:$versions.atsl_runner"
atsl.rules = "androidx.test:rules:$versions.atsl_rules"
deps.atsl = atsl

def mockito = [:]
mockito.core = "org.mockito:mockito-core:$versions.mockito"
mockito.all = "org.mockito:mockito-all:$versions.mockito_all"
mockito.android = "org.mockito:mockito-android:$versions.mockito_android"
deps.mockito = mockito

deps.paging_ktx = "androidx.paging:paging-runtime-ktx:$versions.paging"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

deps.dexmaker = "com.linkedin.dexmaker:dexmaker-mockito:$versions.dexmaker"
deps.timber = "com.jakewharton.timber:timber:$versions.timber"
deps.junit = "junit:junit:$versions.junit"
deps.mock_web_server = "com.squareup.okhttp3:mockwebserver:$versions.mockwebserver"
deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.hamcrest = "org.hamcrest:hamcrest-all:$versions.hamcrest"
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"
deps.robolectric = "org.robolectric:robolectric:$versions.robolectric"
ext.deps = deps

def build_versions = [:]
build_versions.min_sdk = 14
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def work = [:]
work.runtime = "androidx.work:work-runtime:$versions.work"
work.testing = "androidx.work:work-testing:$versions.work"
work.firebase = "androidx.work:work-firebase:$versions.work"
work.runtime_ktx = "androidx.work:work-runtime-ktx:$versions.work"
deps.work = work

def navigation = [:]
navigation.runtime = "androidx.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "androidx.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "androidx.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui:$versions.navigation"
navigation.ui_ktx = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
navigation.safe_args_plugin = "androidx.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
deps.navigation = navigation

ext.deps = deps

def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

ext.addRepos = this.&addRepos
